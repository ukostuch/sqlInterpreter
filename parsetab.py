
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABS ADD ALL ALTER AND ANY AS ASC AVG BEGIN BETWEEN BY CASE CHECK COALESCE COLUMN COMMA CONSTRAINT COUNT CREATE DATABASE DATEPART DECLARE DEFAULT DELETE DESC DISTINCT DIVIDE DOLARS DOT DROP ELSE ELSIF END EQUALS EXCEPT FLOAT FOREIGN_KEY FROM FULL FUNCTION GREATER_OR_EQUAL GREATER_THAN GROUP HAVING ID IF IN INNER INSERT INT INTERSECT INTO JOIN LANGUAGE LEFT LEFT_PARENTHESIS LESS_OR_EQUAL LESS_THAN LIKE LIMIT MAX MIN MINUS NEWLINE NOT NULL NUMBER ON OR ORDER OUTER PLUS PRIMARY_KEY REFERENCES REPLACE RETURNS RIGHT RIGHT_PARENTHESIS SCHEMA SELECT SEMICOLON SET STRING SUM TABLE THEN TIMES UNION UNIQUE UPDATE VALUES VARCHAR WHEN WHEREstatement : statement2\n                | statement statement2statement2 : select_statement SEMICOLON\n                 | insert_statement\n                 | update_statement\n                 | delete_statement\n                 | create_statement\n                 | alter_statement\n                 | drop_statement\n                 | select_statement UNION select_statement SEMICOLON\n                 | select_statement UNION ALL select_statement SEMICOLON\n                 | select_statement INTERSECT select_statement SEMICOLON\n                 | select_statement EXCEPT select_statement SEMICOLON\n    select_statement : SELECT dist_list select_list FROM table_expr join_expr where_clause group_by_clause having_clause order_by_clause limit_clause\n                     | SELECT dist_list select_list FROM table_expr join_expr where_clause order_by_clause\n                     | SELECT dist_list select_list FROM table_expr join_expr where_clause group_by_clause having_clause\n                     | SELECT dist_list select_list FROM table_expr join_expr where_clause group_by_clause order_by_clause limit_clause\n                     | SELECT dist_list select_list FROM table_expr join_expr where_clause group_by_clause\n                     | SELECT dist_list select_list FROM table_expr join_expr where_clause order_by_clause limit_clause\n                     | SELECT dist_list select_list FROM table_expr join_expr where_clause\n                     | SELECT dist_list select_list FROM table_expr join_expr\n                     | SELECT dist_list select_list FROM table_expr where_clause group_by_clause having_clause order_by_clause limit_clause\n                     | SELECT dist_list select_list FROM table_expr where_clause order_by_clause\n                     | SELECT dist_list select_list FROM table_expr where_clause group_by_clause having_clause\n                     | SELECT dist_list select_list FROM table_expr where_clause group_by_clause order_by_clause limit_clause\n                     | SELECT dist_list select_list FROM table_expr where_clause group_by_clause\n                     | SELECT dist_list select_list FROM table_expr where_clause order_by_clause limit_clause\n                     | SELECT dist_list select_list FROM table_expr where_clause\n                     | SELECT dist_list select_list FROM table_expr\n                     | SELECT select_list FROM table_expr join_expr where_clause group_by_clause having_clause order_by_clause limit_clause\n                     | SELECT select_list FROM table_expr join_expr where_clause order_by_clause\n                     | SELECT select_list FROM table_expr join_expr where_clause group_by_clause having_clause\n                     | SELECT select_list FROM table_expr join_expr where_clause group_by_clause order_by_clause limit_clause\n                     | SELECT select_list FROM table_expr join_expr where_clause group_by_clause\n                     | SELECT select_list FROM table_expr join_expr where_clause order_by_clause limit_clause\n                     | SELECT select_list FROM table_expr join_expr where_clause\n                     | SELECT select_list FROM table_expr join_expr\n                     | SELECT select_list FROM table_expr where_clause group_by_clause having_clause order_by_clause limit_clause\n                     | SELECT select_list FROM table_expr where_clause order_by_clause\n                     | SELECT select_list FROM table_expr where_clause group_by_clause having_clause\n                     | SELECT select_list FROM table_expr where_clause group_by_clause order_by_clause limit_clause\n                     | SELECT select_list FROM table_expr where_clause group_by_clause\n                     | SELECT select_list FROM table_expr where_clause order_by_clause limit_clause\n                     | SELECT select_list FROM table_expr where_clause\n                     | SELECT select_list FROM table_expr\n    select_list : select_list COMMA select_item\n                   | select_item\n                   | TIMES\n                   | conditional_exprdist_list : DISTINCTselect_item : expression AS ID\n                   | expression\n                   | COALESCE LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS\n                   | conditional_expr AS IDtable_expr : ID DOT ID\n                  | IDwhere_clause : \n                    | WHERE expression\n                    | WHERE ID BETWEEN between_expr AND between_expr\n                    | WHERE ID NOT BETWEEN between_expr AND between_expr\n                    | WHERE ID IN LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS\n                    | WHERE ID NOT IN LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS\n                    | WHERE ID IN LEFT_PARENTHESIS select_statement RIGHT_PARENTHESIS\n                    | WHERE ID NOT IN LEFT_PARENTHESIS select_statement RIGHT_PARENTHESIS\n                    | WHERE ID LIKE STRING\n                    between_expr : ID\n                  | ID DOT ID\n                  | NUMBER\n                  | ABS LEFT_PARENTHESIS ID RIGHT_PARENTHESIS\n                  | ABS LEFT_PARENTHESIS NUMBER RIGHT_PARENTHESIS\n                  | STRING\ngroup_by_clause : GROUP BY expression_listhaving_clause : HAVING expressionorder_by_clause : ORDER BY order_listorder_item : expression ASC\n                  | expression DESC\n                  | expressionorder_list : order_list COMMA order_item\n                  | order_itemlimit_clause : LIMIT NUMBERexpression_list : expression_list COMMA expression\n                       | expressionexpression : ID\n                  | ID DOT ID\n                  | NUMBER\n                  | ABS LEFT_PARENTHESIS ID RIGHT_PARENTHESIS\n                  | ABS LEFT_PARENTHESIS NUMBER RIGHT_PARENTHESIS\n                  | STRING\n                  | NULL\n                  | expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression EQUALS expression\n                  | expression LESS_OR_EQUAL expression\n                  | expression LESS_THAN expression\n                  | expression GREATER_THAN expression\n                  | expression GREATER_OR_EQUAL expression\n                  | expression AND expression\n                  | expression OR expression\n                  | NOT expression\n                  | DATEPART LEFT_PARENTHESIS ID COMMA STRING RIGHT_PARENTHESIS\n                  | LEFT_PARENTHESIS expression RIGHT_PARENTHESIS\n                  | COUNT LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS\n                  | AVG LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS\n                  | MIN LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS\n                  | MAX LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS\n                  | SUM LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS\n                  | conditional_exprinsert_statement : INSERT INTO ID LEFT_PARENTHESIS column_list RIGHT_PARENTHESIS VALUES LEFT_PARENTHESIS value_list RIGHT_PARENTHESIS SEMICOLONcolumn_list : column_list COMMA ID\n                   | IDvalue_list : value_list COMMA value\n                  | valuevalue : NUMBER\n             | STRING\n             | ID\n             | NULLupdate_statement : UPDATE ID SET set_list where_clause SEMICOLONconditional_expr : IF expression THEN expression END\n                        | IF expression THEN expression ELSE expression\n                        | IF  expression THEN expression elsif_list ELSE expression END\n                        | CASE case_expr END\n                        elsif_list : ELSIF LEFT_PARENTHESIS expression THEN expression\n                  | elsif_list ELSIF LEFT_PARENTHESIS expression THEN expressioncase_expr : WHEN expression THEN expression\n                 | WHEN expression THEN  expression case_exprset_list : set_list COMMA ID EQUALS value\n                | ID EQUALS valuedelete_statement : DELETE FROM ID where_clause SEMICOLONcreate_statement : CREATE TABLE ID LEFT_PARENTHESIS column_def_list RIGHT_PARENTHESIS SEMICOLONcolumn_def_list : column_def_list COMMA column_def\n                       | column_defcolumn_def : ID data_type\n                  | ID data_type column_constraintsparameter_list : parameter_list COMMA parameter\n                      | parameterparameter : ID data_typefunction_body : DOLARS DECLARE parameter_list SEMICOLON BEGIN STRING END SEMICOLON DOLARS SEMICOLON\n    data_type : INT\n                 | VARCHAR LEFT_PARENTHESIS NUMBER RIGHT_PARENTHESIS\n                 | FLOAT LEFT_PARENTHESIS NUMBER RIGHT_PARENTHESIScolumn_constraints : column_constraints column_constraint\n                          | column_constraintcolumn_constraint : NOT NULL\n                         | UNIQUE\n                         | PRIMARY_KEY\n                         | FOREIGN_KEY LEFT_PARENTHESIS ID RIGHT_PARENTHESIS REFERENCES ID LEFT_PARENTHESIS ID RIGHT_PARENTHESIS\n                         | CHECK LEFT_PARENTHESIS expression RIGHT_PARENTHESIS\n                         | DEFAULT valuejoin_expr : join_type table_expr ON expression\n                 | join_expr join_type table_expr ON expressionjoin_type : INNER JOIN\n                 | LEFT JOIN\n                 | RIGHT JOIN\n                 | FULL JOIN\n                 | OUTER JOIN\n                 | JOINalter_statement : ALTER TABLE ID alter_actions SEMICOLONalter_actions : alter_actions alter_action\n                     | alter_actionalter_action : ADD COLUMN column_def\n                    | ADD CONSTRAINT ID constraint_def\n                    | DROP COLUMN ID\n                    | DROP CONSTRAINT IDconstraint_def : UNIQUE LEFT_PARENTHESIS ID RIGHT_PARENTHESIS\n                      | PRIMARY_KEY LEFT_PARENTHESIS ID RIGHT_PARENTHESIS\n                      | FOREIGN_KEY LEFT_PARENTHESIS ID RIGHT_PARENTHESIS REFERENCES ID LEFT_PARENTHESIS ID RIGHT_PARENTHESIS\n                      | CHECK LEFT_PARENTHESIS expression RIGHT_PARENTHESIS\n                      | DEFAULT valuedrop_statement : DROP TABLE ID SEMICOLON\n                      | DROP COLUMN ID DOT ID SEMICOLON'
    
_lr_action_items = {'SELECT':([0,1,2,4,5,6,7,8,9,17,18,19,20,21,53,94,96,97,141,143,172,178,214,230,261,273,308,379,],[10,10,-1,-4,-5,-6,-7,-8,-9,-2,-3,10,10,10,10,-10,-12,-13,-171,-11,-130,-159,-119,-172,10,-131,10,-110,]),'INSERT':([0,1,2,4,5,6,7,8,9,17,18,94,96,97,141,143,172,178,214,230,273,379,],[11,11,-1,-4,-5,-6,-7,-8,-9,-2,-3,-10,-12,-13,-171,-11,-130,-159,-119,-172,-131,-110,]),'UPDATE':([0,1,2,4,5,6,7,8,9,17,18,94,96,97,141,143,172,178,214,230,273,379,],[12,12,-1,-4,-5,-6,-7,-8,-9,-2,-3,-10,-12,-13,-171,-11,-130,-159,-119,-172,-131,-110,]),'DELETE':([0,1,2,4,5,6,7,8,9,17,18,94,96,97,141,143,172,178,214,230,273,379,],[13,13,-1,-4,-5,-6,-7,-8,-9,-2,-3,-10,-12,-13,-171,-11,-130,-159,-119,-172,-131,-110,]),'CREATE':([0,1,2,4,5,6,7,8,9,17,18,94,96,97,141,143,172,178,214,230,273,379,],[14,14,-1,-4,-5,-6,-7,-8,-9,-2,-3,-10,-12,-13,-171,-11,-130,-159,-119,-172,-131,-110,]),'ALTER':([0,1,2,4,5,6,7,8,9,17,18,94,96,97,141,143,172,178,214,230,273,379,],[15,15,-1,-4,-5,-6,-7,-8,-9,-2,-3,-10,-12,-13,-171,-11,-130,-159,-119,-172,-131,-110,]),'DROP':([0,1,2,4,5,6,7,8,9,17,18,91,94,96,97,137,138,141,143,172,178,179,209,211,212,213,214,220,221,226,228,229,230,263,264,266,267,273,275,311,312,315,322,351,352,372,373,374,376,379,389,390,],[16,16,-1,-4,-5,-6,-7,-8,-9,-2,-3,140,-10,-12,-13,140,-161,-171,-11,-130,-159,-160,-117,-115,-116,-118,-119,-134,-140,-162,-164,-165,-172,-135,-144,-146,-147,-131,-163,-143,-145,-150,-170,-141,-142,-149,-166,-167,-169,-110,-148,-168,]),'$end':([1,2,4,5,6,7,8,9,17,18,94,96,97,141,143,172,178,214,230,273,379,],[0,-1,-4,-5,-6,-7,-8,-9,-2,-3,-10,-12,-13,-171,-11,-130,-159,-119,-172,-131,-110,]),'SEMICOLON':([3,29,34,36,37,52,54,55,75,80,89,92,95,99,100,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,133,134,137,138,144,145,146,159,160,162,163,164,165,166,170,173,174,179,184,185,186,187,189,190,199,200,201,209,210,211,212,213,220,221,224,226,228,229,231,232,233,234,235,237,240,245,250,254,256,258,262,263,264,266,267,275,281,282,283,285,286,288,291,292,293,294,295,296,297,298,303,311,312,315,322,323,325,327,329,330,331,333,334,335,340,341,347,348,351,352,358,359,360,361,364,366,367,368,369,370,372,373,374,376,377,389,390,],[18,-83,-85,-88,-89,94,96,97,-109,-101,-57,141,143,-45,-56,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-84,-82,-103,-123,-57,172,178,-161,-29,-37,-44,-86,-87,-104,-105,-106,-107,-108,214,-58,-83,-160,230,-21,-28,-36,-42,-39,-55,-81,-120,-117,-129,-115,-116,-118,-134,-140,273,-162,-164,-165,-20,-26,-23,-34,-31,-40,-43,-121,-102,-66,-68,-71,-65,-135,-144,-146,-147,-163,-18,-15,-24,-27,-32,-35,-41,-73,-80,-72,-74,-79,-77,-151,-128,-143,-145,-150,-170,-16,-19,-25,-33,-152,-38,-75,-76,-122,-67,-59,-61,-63,-141,-142,-17,-22,-30,-78,379,-69,-70,-60,-62,-64,-149,-166,-167,-169,-14,-148,-168,]),'UNION':([3,29,34,36,37,75,80,99,100,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,144,145,146,159,160,162,163,164,165,166,173,174,185,186,187,189,190,199,200,201,231,232,233,234,235,237,240,245,250,254,256,258,262,281,282,283,285,286,288,291,292,293,294,295,296,297,298,323,325,327,329,330,331,333,334,335,340,341,347,348,358,359,360,361,366,367,368,369,370,377,],[19,-83,-85,-88,-89,-109,-101,-45,-56,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-84,-82,-103,-123,-29,-37,-44,-86,-87,-104,-105,-106,-107,-108,-58,-83,-21,-28,-36,-42,-39,-55,-81,-120,-20,-26,-23,-34,-31,-40,-43,-121,-102,-66,-68,-71,-65,-18,-15,-24,-27,-32,-35,-41,-73,-80,-72,-74,-79,-77,-151,-16,-19,-25,-33,-152,-38,-75,-76,-122,-67,-59,-61,-63,-17,-22,-30,-78,-69,-70,-60,-62,-64,-14,]),'INTERSECT':([3,29,34,36,37,75,80,99,100,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,144,145,146,159,160,162,163,164,165,166,173,174,185,186,187,189,190,199,200,201,231,232,233,234,235,237,240,245,250,254,256,258,262,281,282,283,285,286,288,291,292,293,294,295,296,297,298,323,325,327,329,330,331,333,334,335,340,341,347,348,358,359,360,361,366,367,368,369,370,377,],[20,-83,-85,-88,-89,-109,-101,-45,-56,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-84,-82,-103,-123,-29,-37,-44,-86,-87,-104,-105,-106,-107,-108,-58,-83,-21,-28,-36,-42,-39,-55,-81,-120,-20,-26,-23,-34,-31,-40,-43,-121,-102,-66,-68,-71,-65,-18,-15,-24,-27,-32,-35,-41,-73,-80,-72,-74,-79,-77,-151,-16,-19,-25,-33,-152,-38,-75,-76,-122,-67,-59,-61,-63,-17,-22,-30,-78,-69,-70,-60,-62,-64,-14,]),'EXCEPT':([3,29,34,36,37,75,80,99,100,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,144,145,146,159,160,162,163,164,165,166,173,174,185,186,187,189,190,199,200,201,231,232,233,234,235,237,240,245,250,254,256,258,262,281,282,283,285,286,288,291,292,293,294,295,296,297,298,323,325,327,329,330,331,333,334,335,340,341,347,348,358,359,360,361,366,367,368,369,370,377,],[21,-83,-85,-88,-89,-109,-101,-45,-56,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-84,-82,-103,-123,-29,-37,-44,-86,-87,-104,-105,-106,-107,-108,-58,-83,-21,-28,-36,-42,-39,-55,-81,-120,-20,-26,-23,-34,-31,-40,-43,-121,-102,-66,-68,-71,-65,-18,-15,-24,-27,-32,-35,-41,-73,-80,-72,-74,-79,-77,-151,-16,-19,-25,-33,-152,-38,-75,-76,-122,-67,-59,-61,-63,-17,-22,-30,-78,-69,-70,-60,-62,-64,-14,]),'DISTINCT':([10,],[24,]),'TIMES':([10,22,24,27,28,29,34,36,37,74,75,76,80,102,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,157,159,160,162,163,164,165,166,173,174,200,201,205,245,250,292,297,298,299,301,330,335,336,350,356,363,378,],[26,26,-50,-109,63,-83,-85,-88,-89,63,-109,63,63,-109,63,63,63,63,63,63,63,63,63,63,63,-84,63,-103,-123,63,63,-86,-87,-104,-105,-106,-107,-108,63,-83,63,-120,63,63,-102,63,63,63,63,63,63,-122,63,63,63,63,63,]),'COALESCE':([10,22,24,58,],[30,30,-50,30,]),'IF':([10,22,24,31,32,38,58,61,62,63,64,65,66,67,68,69,70,71,73,78,82,83,84,85,86,120,135,156,158,202,239,242,243,244,246,248,261,289,300,308,314,321,332,337,362,],[32,32,-50,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'CASE':([10,22,24,31,32,38,58,61,62,63,64,65,66,67,68,69,70,71,73,78,82,83,84,85,86,120,135,156,158,202,239,242,243,244,246,248,261,289,300,308,314,321,332,337,362,],[33,33,-50,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'ID':([10,12,22,24,31,32,38,45,47,48,49,50,51,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,78,79,81,82,83,84,85,86,88,98,120,131,135,136,142,147,149,154,156,158,169,171,180,181,182,183,188,194,195,196,197,198,202,208,216,225,239,242,243,244,246,248,253,259,261,270,280,289,300,302,304,305,306,308,313,314,318,319,320,321,332,337,344,362,365,381,382,385,386,],[29,46,29,-50,29,29,29,87,89,90,91,92,93,100,29,103,104,29,29,29,29,29,29,29,29,29,29,29,116,29,29,123,125,29,29,29,29,29,132,100,29,167,174,175,184,100,-158,199,29,29,209,215,175,227,228,229,100,-153,-154,-155,-156,-157,29,252,254,175,29,29,29,29,29,29,209,254,29,209,209,29,29,209,340,254,342,29,349,29,353,354,355,29,29,29,254,29,209,383,384,387,388,]),'NUMBER':([10,22,24,31,32,38,58,61,62,63,64,65,66,67,68,69,70,71,73,78,79,82,83,84,85,86,120,135,156,158,169,202,216,239,241,242,243,244,246,248,253,259,261,270,271,272,280,289,300,302,305,306,308,314,321,332,337,344,362,365,],[34,34,-50,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,124,34,34,34,34,34,34,34,34,34,211,34,256,34,293,34,34,34,34,34,211,256,34,211,316,317,211,34,34,211,256,343,34,34,34,34,34,256,34,211,]),'ABS':([10,22,24,31,32,38,58,61,62,63,64,65,66,67,68,69,70,71,73,78,82,83,84,85,86,120,135,156,158,202,216,239,242,243,244,246,248,259,261,289,300,305,308,314,321,332,337,344,362,],[35,35,-50,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,257,35,35,35,35,35,35,257,35,35,35,257,35,35,35,35,35,257,35,]),'STRING':([10,22,24,31,32,38,58,61,62,63,64,65,66,67,68,69,70,71,73,78,82,83,84,85,86,120,135,156,158,161,169,202,216,219,239,242,243,244,246,248,253,259,261,270,280,289,300,302,305,308,314,321,332,337,344,362,365,],[36,36,-50,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,206,212,36,258,262,36,36,36,36,36,36,212,258,36,212,212,36,36,212,258,36,36,36,36,36,258,36,212,]),'NULL':([10,22,24,31,32,38,58,61,62,63,64,65,66,67,68,69,70,71,73,78,82,83,84,85,86,120,135,156,158,169,202,239,242,243,244,246,248,253,261,265,270,280,289,300,302,308,314,321,332,337,362,365,],[37,37,-50,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,213,37,37,37,37,37,37,37,213,37,312,213,213,37,37,213,37,37,37,37,37,37,213,]),'NOT':([10,22,24,31,32,38,58,61,62,63,64,65,66,67,68,69,70,71,73,78,82,83,84,85,86,120,135,156,158,174,202,209,211,212,213,220,221,239,242,243,244,246,248,261,263,264,266,267,289,300,308,311,312,314,315,321,332,337,351,352,362,372,389,],[38,38,-50,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,217,38,-117,-115,-116,-118,265,-140,38,38,38,38,38,38,38,265,-144,-146,-147,38,38,38,-143,-145,38,-150,38,38,38,-141,-142,38,-149,-148,]),'DATEPART':([10,22,24,31,32,38,58,61,62,63,64,65,66,67,68,69,70,71,73,78,82,83,84,85,86,120,135,156,158,202,239,242,243,244,246,248,261,289,300,308,314,321,332,337,362,],[39,39,-50,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'LEFT_PARENTHESIS':([10,22,24,30,31,32,35,38,39,40,41,42,43,44,58,61,62,63,64,65,66,67,68,69,70,71,73,78,82,83,84,85,86,87,90,120,135,156,158,202,204,218,222,223,239,242,243,244,246,247,248,251,257,260,261,268,269,276,277,278,279,289,300,308,314,321,332,337,362,383,384,],[31,31,-50,73,31,31,79,31,81,82,83,84,85,86,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,131,136,31,31,31,31,31,248,261,271,272,31,31,31,31,31,300,31,302,306,308,31,313,314,318,319,320,321,31,31,31,31,31,31,31,31,385,386,]),'COUNT':([10,22,24,31,32,38,58,61,62,63,64,65,66,67,68,69,70,71,73,78,82,83,84,85,86,120,135,156,158,202,239,242,243,244,246,248,261,289,300,308,314,321,332,337,362,],[40,40,-50,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'AVG':([10,22,24,31,32,38,58,61,62,63,64,65,66,67,68,69,70,71,73,78,82,83,84,85,86,120,135,156,158,202,239,242,243,244,246,248,261,289,300,308,314,321,332,337,362,],[41,41,-50,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'MIN':([10,22,24,31,32,38,58,61,62,63,64,65,66,67,68,69,70,71,73,78,82,83,84,85,86,120,135,156,158,202,239,242,243,244,246,248,261,289,300,308,314,321,332,337,362,],[42,42,-50,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'MAX':([10,22,24,31,32,38,58,61,62,63,64,65,66,67,68,69,70,71,73,78,82,83,84,85,86,120,135,156,158,202,239,242,243,244,246,248,261,289,300,308,314,321,332,337,362,],[43,43,-50,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'SUM':([10,22,24,31,32,38,58,61,62,63,64,65,66,67,68,69,70,71,73,78,82,83,84,85,86,120,135,156,158,202,239,242,243,244,246,248,261,289,300,308,314,321,332,337,362,],[44,44,-50,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'INTO':([11,],[45,]),'FROM':([13,23,25,26,27,28,29,34,36,37,56,75,80,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,121,155,159,160,162,163,164,165,166,201,245,250,335,],[47,57,-47,-48,-49,-52,-83,-85,-88,-89,98,-109,-101,-46,-109,-54,-51,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-84,-103,-123,-53,-86,-87,-104,-105,-106,-107,-108,-120,-121,-102,-122,]),'TABLE':([14,15,16,],[48,49,50,]),'COLUMN':([16,139,140,],[51,180,182,]),'ALL':([19,],[53,]),'COMMA':([23,25,26,27,28,29,34,36,37,56,75,80,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,125,126,127,128,129,130,133,155,159,160,162,163,164,165,166,167,168,176,177,200,201,209,210,211,212,213,220,221,245,250,252,263,264,266,267,274,294,295,296,297,303,309,311,312,315,333,334,335,338,339,345,351,352,361,372,380,389,],[58,-47,-48,-49,-52,-83,-85,-88,-89,58,-109,-101,-46,-109,-54,-51,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-84,156,-82,-103,-123,161,156,156,156,156,156,171,-53,-86,-87,-104,-105,-106,-107,-108,-112,208,225,-133,-81,-120,-117,-129,-115,-116,-118,-134,-140,-121,-102,-111,-135,-144,-146,-147,-132,156,332,-79,-77,-128,156,-143,-145,-150,-75,-76,-122,365,-114,156,-141,-142,-78,-149,-113,-148,]),'AS':([27,28,29,34,36,37,75,80,102,105,106,107,108,109,110,111,112,113,114,115,116,119,121,159,160,162,163,164,165,166,201,245,250,335,],[59,60,-83,-85,-88,-89,-109,-101,59,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-84,-103,-123,-86,-87,-104,-105,-106,-107,-108,-120,-121,-102,-122,]),'PLUS':([27,28,29,34,36,37,74,75,76,80,102,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,157,159,160,162,163,164,165,166,173,174,200,201,205,245,250,292,297,298,299,301,330,335,336,350,356,363,378,],[-109,61,-83,-85,-88,-89,61,-109,61,61,-109,61,61,61,61,61,61,61,61,61,61,61,-84,61,-103,-123,61,61,-86,-87,-104,-105,-106,-107,-108,61,-83,61,-120,61,61,-102,61,61,61,61,61,61,-122,61,61,61,61,61,]),'MINUS':([27,28,29,34,36,37,74,75,76,80,102,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,157,159,160,162,163,164,165,166,173,174,200,201,205,245,250,292,297,298,299,301,330,335,336,350,356,363,378,],[-109,62,-83,-85,-88,-89,62,-109,62,62,-109,62,62,62,62,62,62,62,62,62,62,62,-84,62,-103,-123,62,62,-86,-87,-104,-105,-106,-107,-108,62,-83,62,-120,62,62,-102,62,62,62,62,62,62,-122,62,62,62,62,62,]),'DIVIDE':([27,28,29,34,36,37,74,75,76,80,102,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,157,159,160,162,163,164,165,166,173,174,200,201,205,245,250,292,297,298,299,301,330,335,336,350,356,363,378,],[-109,64,-83,-85,-88,-89,64,-109,64,64,-109,64,64,64,64,64,64,64,64,64,64,64,-84,64,-103,-123,64,64,-86,-87,-104,-105,-106,-107,-108,64,-83,64,-120,64,64,-102,64,64,64,64,64,64,-122,64,64,64,64,64,]),'EQUALS':([27,28,29,34,36,37,74,75,76,80,102,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,132,157,159,160,162,163,164,165,166,173,174,200,201,205,215,245,250,292,297,298,299,301,330,335,336,350,356,363,378,],[-109,65,-83,-85,-88,-89,65,-109,65,65,-109,65,65,65,65,65,65,65,65,65,65,65,-84,65,-103,-123,65,169,65,-86,-87,-104,-105,-106,-107,-108,65,-83,65,-120,65,253,65,-102,65,65,65,65,65,65,-122,65,65,65,65,65,]),'LESS_OR_EQUAL':([27,28,29,34,36,37,74,75,76,80,102,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,157,159,160,162,163,164,165,166,173,174,200,201,205,245,250,292,297,298,299,301,330,335,336,350,356,363,378,],[-109,66,-83,-85,-88,-89,66,-109,66,66,-109,66,66,66,66,66,66,66,66,66,66,66,-84,66,-103,-123,66,66,-86,-87,-104,-105,-106,-107,-108,66,-83,66,-120,66,66,-102,66,66,66,66,66,66,-122,66,66,66,66,66,]),'LESS_THAN':([27,28,29,34,36,37,74,75,76,80,102,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,157,159,160,162,163,164,165,166,173,174,200,201,205,245,250,292,297,298,299,301,330,335,336,350,356,363,378,],[-109,67,-83,-85,-88,-89,67,-109,67,67,-109,67,67,67,67,67,67,67,67,67,67,67,-84,67,-103,-123,67,67,-86,-87,-104,-105,-106,-107,-108,67,-83,67,-120,67,67,-102,67,67,67,67,67,67,-122,67,67,67,67,67,]),'GREATER_THAN':([27,28,29,34,36,37,74,75,76,80,102,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,157,159,160,162,163,164,165,166,173,174,200,201,205,245,250,292,297,298,299,301,330,335,336,350,356,363,378,],[-109,68,-83,-85,-88,-89,68,-109,68,68,-109,68,68,68,68,68,68,68,68,68,68,68,-84,68,-103,-123,68,68,-86,-87,-104,-105,-106,-107,-108,68,-83,68,-120,68,68,-102,68,68,68,68,68,68,-122,68,68,68,68,68,]),'GREATER_OR_EQUAL':([27,28,29,34,36,37,74,75,76,80,102,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,157,159,160,162,163,164,165,166,173,174,200,201,205,245,250,292,297,298,299,301,330,335,336,350,356,363,378,],[-109,69,-83,-85,-88,-89,69,-109,69,69,-109,69,69,69,69,69,69,69,69,69,69,69,-84,69,-103,-123,69,69,-86,-87,-104,-105,-106,-107,-108,69,-83,69,-120,69,69,-102,69,69,69,69,69,69,-122,69,69,69,69,69,]),'AND':([27,28,29,34,36,37,74,75,76,80,102,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,157,159,160,162,163,164,165,166,173,174,200,201,205,245,250,254,255,256,258,292,297,298,299,301,307,330,335,336,340,350,356,363,366,367,378,],[-109,70,-83,-85,-88,-89,70,-109,70,70,-109,70,70,70,70,70,70,70,70,70,70,70,-84,70,-103,-123,70,70,-86,-87,-104,-105,-106,-107,-108,70,-83,70,-120,70,70,-102,-66,305,-68,-71,70,70,70,70,70,344,70,-122,70,-67,70,70,70,-69,-70,70,]),'OR':([27,28,29,34,36,37,74,75,76,80,102,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,122,157,159,160,162,163,164,165,166,173,174,200,201,205,245,250,292,297,298,299,301,330,335,336,350,356,363,378,],[-109,71,-83,-85,-88,-89,71,-109,71,71,-109,71,71,71,71,71,71,71,71,71,71,71,-84,71,-103,-123,71,71,-86,-87,-104,-105,-106,-107,-108,71,-83,71,-120,71,71,-102,71,71,71,71,71,71,-122,71,71,71,71,71,]),'RIGHT_PARENTHESIS':([29,34,36,37,74,75,80,99,100,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,121,123,124,126,127,128,129,130,144,145,146,159,160,162,163,164,165,166,167,168,173,174,176,177,185,186,187,189,190,199,200,201,206,209,211,212,213,220,221,231,232,233,234,235,237,240,245,250,252,254,256,258,262,263,264,266,267,274,281,282,283,285,286,288,291,292,293,294,295,296,297,298,309,310,311,312,315,316,317,323,325,327,329,330,331,333,334,335,338,339,340,341,342,343,345,346,347,348,349,350,351,352,353,354,355,356,358,359,360,361,366,367,368,369,370,372,377,380,387,388,389,],[-83,-85,-88,-89,119,-109,-101,-45,-56,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-84,155,-82,-103,-123,159,160,162,163,164,165,166,-29,-37,-44,-86,-87,-104,-105,-106,-107,-108,-112,207,-58,-83,224,-133,-21,-28,-36,-42,-39,-55,-81,-120,250,-117,-115,-116,-118,-134,-140,-20,-26,-23,-34,-31,-40,-43,-121,-102,-111,-66,-68,-71,-65,-135,-144,-146,-147,-132,-18,-15,-24,-27,-32,-35,-41,-73,-80,-72,-74,-79,-77,-151,347,348,-143,-145,-150,351,352,-16,-19,-25,-33,-152,-38,-75,-76,-122,364,-114,-67,-59,366,367,369,370,-61,-63,371,372,-141,-142,373,374,375,376,-17,-22,-30,-78,-69,-70,-60,-62,-64,-149,-14,-113,389,390,-148,]),'THEN':([29,34,36,37,75,76,80,105,106,107,108,109,110,111,112,113,114,115,116,119,121,122,159,160,162,163,164,165,166,201,245,250,301,335,336,],[-83,-85,-88,-89,-109,120,-101,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-84,-103,-123,158,-86,-87,-104,-105,-106,-107,-108,-120,-121,-102,337,-122,362,]),'END':([29,34,36,37,75,77,80,105,106,107,108,109,110,111,112,113,114,115,116,119,121,157,159,160,162,163,164,165,166,201,205,245,249,250,299,335,],[-83,-85,-88,-89,-109,121,-101,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-84,-103,-123,201,-86,-87,-104,-105,-106,-107,-108,-120,-126,-121,-127,-102,335,-122,]),'ELSE':([29,34,36,37,75,80,105,106,107,108,109,110,111,112,113,114,115,116,119,121,157,159,160,162,163,164,165,166,201,203,245,250,335,363,378,],[-83,-85,-88,-89,-109,-101,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-84,-103,-123,202,-86,-87,-104,-105,-106,-107,-108,-120,246,-121,-102,-122,-124,-125,]),'ELSIF':([29,34,36,37,75,80,105,106,107,108,109,110,111,112,113,114,115,116,119,121,157,159,160,162,163,164,165,166,201,203,245,250,335,363,378,],[-83,-85,-88,-89,-109,-101,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-84,-103,-123,204,-86,-87,-104,-105,-106,-107,-108,-120,247,-121,-102,-122,-124,-125,]),'GROUP':([29,34,36,37,75,80,99,100,105,106,107,108,109,110,111,112,113,114,115,116,119,121,144,145,146,159,160,162,163,164,165,166,173,174,185,186,187,199,201,231,245,250,254,256,258,262,298,330,335,340,341,347,348,366,367,368,369,370,],[-83,-85,-88,-89,-109,-101,-57,-56,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-84,-103,-123,-57,-57,191,-86,-87,-104,-105,-106,-107,-108,-58,-83,-57,191,191,-55,-120,191,-121,-102,-66,-68,-71,-65,-151,-152,-122,-67,-59,-61,-63,-69,-70,-60,-62,-64,]),'ORDER':([29,34,36,37,75,80,99,100,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,144,145,146,159,160,162,163,164,165,166,173,174,185,186,187,189,199,200,201,231,232,234,237,245,250,254,256,258,262,281,283,286,292,294,298,323,330,335,340,341,347,348,366,367,368,369,370,],[-83,-85,-88,-89,-109,-101,-57,-56,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-84,-82,-103,-123,-57,-57,192,-86,-87,-104,-105,-106,-107,-108,-58,-83,-57,192,192,192,-55,-81,-120,192,192,192,192,-121,-102,-66,-68,-71,-65,192,192,192,-73,-72,-151,192,-152,-122,-67,-59,-61,-63,-69,-70,-60,-62,-64,]),'HAVING':([29,34,36,37,75,80,105,106,107,108,109,110,111,112,113,114,115,116,118,119,121,159,160,162,163,164,165,166,189,200,201,232,234,245,250,281,294,335,],[-83,-85,-88,-89,-109,-101,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-84,-82,-103,-123,-86,-87,-104,-105,-106,-107,-108,239,-81,-120,239,239,-121,-102,239,-72,-122,]),'WHEN':([29,33,34,36,37,75,80,105,106,107,108,109,110,111,112,113,114,115,116,119,121,159,160,162,163,164,165,166,201,205,245,250,335,],[-83,78,-85,-88,-89,-109,-101,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-84,-103,-123,-86,-87,-104,-105,-106,-107,-108,-120,78,-121,-102,-122,]),'ASC':([29,34,36,37,75,80,105,106,107,108,109,110,111,112,113,114,115,116,119,121,159,160,162,163,164,165,166,201,245,250,297,335,],[-83,-85,-88,-89,-109,-101,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-84,-103,-123,-86,-87,-104,-105,-106,-107,-108,-120,-121,-102,333,-122,]),'DESC':([29,34,36,37,75,80,105,106,107,108,109,110,111,112,113,114,115,116,119,121,159,160,162,163,164,165,166,201,245,250,297,335,],[-83,-85,-88,-89,-109,-101,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-84,-103,-123,-86,-87,-104,-105,-106,-107,-108,-120,-121,-102,334,-122,]),'LIMIT':([29,34,36,37,75,80,105,106,107,108,109,110,111,112,113,114,115,116,119,121,159,160,162,163,164,165,166,190,201,233,235,238,245,250,282,284,287,290,295,296,297,324,326,328,333,334,335,357,361,],[-83,-85,-88,-89,-109,-101,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-84,-103,-123,-86,-87,-104,-105,-106,-107,-108,241,-120,241,241,241,-121,-102,241,241,241,241,-74,-79,-77,241,241,241,-75,-76,-122,241,-78,]),'WHERE':([29,34,36,37,75,80,89,99,100,105,106,107,108,109,110,111,112,113,114,115,116,119,121,133,144,145,159,160,162,163,164,165,166,185,199,201,209,210,211,212,213,245,250,298,303,330,335,],[-83,-85,-88,-89,-109,-101,135,135,-56,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-84,-103,-123,135,135,135,-86,-87,-104,-105,-106,-107,-108,135,-55,-120,-117,-129,-115,-116,-118,-121,-102,-151,-128,-152,-122,]),'INNER':([29,34,36,37,75,80,99,100,105,106,107,108,109,110,111,112,113,114,115,116,119,121,144,145,159,160,162,163,164,165,166,185,199,201,245,250,298,330,335,],[-83,-85,-88,-89,-109,-101,148,-56,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-84,-103,-123,148,148,-86,-87,-104,-105,-106,-107,-108,148,-55,-120,-121,-102,-151,-152,-122,]),'LEFT':([29,34,36,37,75,80,99,100,105,106,107,108,109,110,111,112,113,114,115,116,119,121,144,145,159,160,162,163,164,165,166,185,199,201,245,250,298,330,335,],[-83,-85,-88,-89,-109,-101,150,-56,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-84,-103,-123,150,150,-86,-87,-104,-105,-106,-107,-108,150,-55,-120,-121,-102,-151,-152,-122,]),'RIGHT':([29,34,36,37,75,80,99,100,105,106,107,108,109,110,111,112,113,114,115,116,119,121,144,145,159,160,162,163,164,165,166,185,199,201,245,250,298,330,335,],[-83,-85,-88,-89,-109,-101,151,-56,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-84,-103,-123,151,151,-86,-87,-104,-105,-106,-107,-108,151,-55,-120,-121,-102,-151,-152,-122,]),'FULL':([29,34,36,37,75,80,99,100,105,106,107,108,109,110,111,112,113,114,115,116,119,121,144,145,159,160,162,163,164,165,166,185,199,201,245,250,298,330,335,],[-83,-85,-88,-89,-109,-101,152,-56,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-84,-103,-123,152,152,-86,-87,-104,-105,-106,-107,-108,152,-55,-120,-121,-102,-151,-152,-122,]),'OUTER':([29,34,36,37,75,80,99,100,105,106,107,108,109,110,111,112,113,114,115,116,119,121,144,145,159,160,162,163,164,165,166,185,199,201,245,250,298,330,335,],[-83,-85,-88,-89,-109,-101,153,-56,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-84,-103,-123,153,153,-86,-87,-104,-105,-106,-107,-108,153,-55,-120,-121,-102,-151,-152,-122,]),'JOIN':([29,34,36,37,75,80,99,100,105,106,107,108,109,110,111,112,113,114,115,116,119,121,144,145,148,150,151,152,153,159,160,162,163,164,165,166,185,199,201,245,250,298,330,335,],[-83,-85,-88,-89,-109,-101,149,-56,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-84,-103,-123,149,149,194,195,196,197,198,-86,-87,-104,-105,-106,-107,-108,149,-55,-120,-121,-102,-151,-152,-122,]),'DOT':([29,93,100,174,254,],[72,142,154,72,304,]),'SET':([46,],[88,]),'ADD':([91,137,138,179,209,211,212,213,220,221,226,228,229,263,264,266,267,275,311,312,315,322,351,352,372,373,374,376,389,390,],[139,139,-161,-160,-117,-115,-116,-118,-134,-140,-162,-164,-165,-135,-144,-146,-147,-163,-143,-145,-150,-170,-141,-142,-149,-166,-167,-169,-148,-168,]),'ON':([100,193,199,236,],[-56,244,-55,289,]),'CONSTRAINT':([139,140,],[181,183,]),'BETWEEN':([174,217,],[216,259,]),'IN':([174,217,],[218,260,]),'LIKE':([174,],[219,]),'INT':([175,],[221,]),'VARCHAR':([175,],[222,]),'FLOAT':([175,],[223,]),'BY':([191,192,],[242,243,]),'VALUES':([207,],[251,]),'UNIQUE':([209,211,212,213,220,221,227,263,264,266,267,311,312,315,351,352,372,389,],[-117,-115,-116,-118,266,-140,276,266,-144,-146,-147,-143,-145,-150,-141,-142,-149,-148,]),'PRIMARY_KEY':([209,211,212,213,220,221,227,263,264,266,267,311,312,315,351,352,372,389,],[-117,-115,-116,-118,267,-140,277,267,-144,-146,-147,-143,-145,-150,-141,-142,-149,-148,]),'FOREIGN_KEY':([209,211,212,213,220,221,227,263,264,266,267,311,312,315,351,352,372,389,],[-117,-115,-116,-118,268,-140,278,268,-144,-146,-147,-143,-145,-150,-141,-142,-149,-148,]),'CHECK':([209,211,212,213,220,221,227,263,264,266,267,311,312,315,351,352,372,389,],[-117,-115,-116,-118,269,-140,279,269,-144,-146,-147,-143,-145,-150,-141,-142,-149,-148,]),'DEFAULT':([209,211,212,213,220,221,227,263,264,266,267,311,312,315,351,352,372,389,],[-117,-115,-116,-118,270,-140,280,270,-144,-146,-147,-143,-145,-150,-141,-142,-149,-148,]),'REFERENCES':([371,375,],[381,382,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'statement2':([0,1,],[2,17,]),'select_statement':([0,1,19,20,21,53,261,308,],[3,3,52,54,55,95,310,346,]),'insert_statement':([0,1,],[4,4,]),'update_statement':([0,1,],[5,5,]),'delete_statement':([0,1,],[6,6,]),'create_statement':([0,1,],[7,7,]),'alter_statement':([0,1,],[8,8,]),'drop_statement':([0,1,],[9,9,]),'dist_list':([10,],[22,]),'select_list':([10,22,],[23,56,]),'select_item':([10,22,58,],[25,25,101,]),'conditional_expr':([10,22,31,32,38,58,61,62,63,64,65,66,67,68,69,70,71,73,78,82,83,84,85,86,120,135,156,158,202,239,242,243,244,246,248,261,289,300,308,314,321,332,337,362,],[27,27,75,75,75,102,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'expression':([10,22,31,32,38,58,61,62,63,64,65,66,67,68,69,70,71,73,78,82,83,84,85,86,120,135,156,158,202,239,242,243,244,246,248,261,289,300,308,314,321,332,337,362,],[28,28,74,76,80,28,105,106,107,108,109,110,111,112,113,114,115,118,122,118,118,118,118,118,157,173,200,205,245,292,118,297,298,299,301,118,330,336,118,350,356,297,363,378,]),'case_expr':([33,205,],[77,249,]),'table_expr':([57,98,147,188,],[99,144,193,236,]),'expression_list':([73,82,83,84,85,86,242,261,308,],[117,126,127,128,129,130,294,309,345,]),'set_list':([88,],[133,]),'where_clause':([89,99,133,144,145,185,],[134,146,170,186,187,231,]),'alter_actions':([91,],[137,]),'alter_action':([91,137,],[138,179,]),'join_expr':([99,144,],[145,185,]),'join_type':([99,144,145,185,],[147,147,188,188,]),'column_list':([131,],[168,]),'column_def_list':([136,],[176,]),'column_def':([136,180,225,],[177,226,274,]),'group_by_clause':([146,186,187,231,],[189,232,234,281,]),'order_by_clause':([146,186,187,189,231,232,234,237,281,283,286,323,],[190,233,235,238,282,284,287,290,324,326,328,357,]),'elsif_list':([157,],[203,]),'value':([169,253,270,280,302,365,],[210,303,315,322,339,380,]),'data_type':([175,],[220,]),'having_clause':([189,232,234,281,],[237,283,286,323,]),'limit_clause':([190,233,235,238,282,284,287,290,324,326,328,357,],[240,285,288,291,325,327,329,331,358,359,360,377,]),'between_expr':([216,259,305,344,],[255,307,341,368,]),'column_constraints':([220,],[263,]),'column_constraint':([220,263,],[264,311,]),'constraint_def':([227,],[275,]),'order_list':([243,],[295,]),'order_item':([243,332,],[296,361,]),'value_list':([302,],[338,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> statement2','statement',1,'p_statement','grammar.py',9),
  ('statement -> statement statement2','statement',2,'p_statement','grammar.py',10),
  ('statement2 -> select_statement SEMICOLON','statement2',2,'p_statement2','grammar.py',15),
  ('statement2 -> insert_statement','statement2',1,'p_statement2','grammar.py',16),
  ('statement2 -> update_statement','statement2',1,'p_statement2','grammar.py',17),
  ('statement2 -> delete_statement','statement2',1,'p_statement2','grammar.py',18),
  ('statement2 -> create_statement','statement2',1,'p_statement2','grammar.py',19),
  ('statement2 -> alter_statement','statement2',1,'p_statement2','grammar.py',20),
  ('statement2 -> drop_statement','statement2',1,'p_statement2','grammar.py',21),
  ('statement2 -> select_statement UNION select_statement SEMICOLON','statement2',4,'p_statement2','grammar.py',22),
  ('statement2 -> select_statement UNION ALL select_statement SEMICOLON','statement2',5,'p_statement2','grammar.py',23),
  ('statement2 -> select_statement INTERSECT select_statement SEMICOLON','statement2',4,'p_statement2','grammar.py',24),
  ('statement2 -> select_statement EXCEPT select_statement SEMICOLON','statement2',4,'p_statement2','grammar.py',25),
  ('select_statement -> SELECT dist_list select_list FROM table_expr join_expr where_clause group_by_clause having_clause order_by_clause limit_clause','select_statement',11,'p_select_statement','grammar.py',33),
  ('select_statement -> SELECT dist_list select_list FROM table_expr join_expr where_clause order_by_clause','select_statement',8,'p_select_statement','grammar.py',34),
  ('select_statement -> SELECT dist_list select_list FROM table_expr join_expr where_clause group_by_clause having_clause','select_statement',9,'p_select_statement','grammar.py',35),
  ('select_statement -> SELECT dist_list select_list FROM table_expr join_expr where_clause group_by_clause order_by_clause limit_clause','select_statement',10,'p_select_statement','grammar.py',36),
  ('select_statement -> SELECT dist_list select_list FROM table_expr join_expr where_clause group_by_clause','select_statement',8,'p_select_statement','grammar.py',37),
  ('select_statement -> SELECT dist_list select_list FROM table_expr join_expr where_clause order_by_clause limit_clause','select_statement',9,'p_select_statement','grammar.py',38),
  ('select_statement -> SELECT dist_list select_list FROM table_expr join_expr where_clause','select_statement',7,'p_select_statement','grammar.py',39),
  ('select_statement -> SELECT dist_list select_list FROM table_expr join_expr','select_statement',6,'p_select_statement','grammar.py',40),
  ('select_statement -> SELECT dist_list select_list FROM table_expr where_clause group_by_clause having_clause order_by_clause limit_clause','select_statement',10,'p_select_statement','grammar.py',41),
  ('select_statement -> SELECT dist_list select_list FROM table_expr where_clause order_by_clause','select_statement',7,'p_select_statement','grammar.py',42),
  ('select_statement -> SELECT dist_list select_list FROM table_expr where_clause group_by_clause having_clause','select_statement',8,'p_select_statement','grammar.py',43),
  ('select_statement -> SELECT dist_list select_list FROM table_expr where_clause group_by_clause order_by_clause limit_clause','select_statement',9,'p_select_statement','grammar.py',44),
  ('select_statement -> SELECT dist_list select_list FROM table_expr where_clause group_by_clause','select_statement',7,'p_select_statement','grammar.py',45),
  ('select_statement -> SELECT dist_list select_list FROM table_expr where_clause order_by_clause limit_clause','select_statement',8,'p_select_statement','grammar.py',46),
  ('select_statement -> SELECT dist_list select_list FROM table_expr where_clause','select_statement',6,'p_select_statement','grammar.py',47),
  ('select_statement -> SELECT dist_list select_list FROM table_expr','select_statement',5,'p_select_statement','grammar.py',48),
  ('select_statement -> SELECT select_list FROM table_expr join_expr where_clause group_by_clause having_clause order_by_clause limit_clause','select_statement',10,'p_select_statement','grammar.py',49),
  ('select_statement -> SELECT select_list FROM table_expr join_expr where_clause order_by_clause','select_statement',7,'p_select_statement','grammar.py',50),
  ('select_statement -> SELECT select_list FROM table_expr join_expr where_clause group_by_clause having_clause','select_statement',8,'p_select_statement','grammar.py',51),
  ('select_statement -> SELECT select_list FROM table_expr join_expr where_clause group_by_clause order_by_clause limit_clause','select_statement',9,'p_select_statement','grammar.py',52),
  ('select_statement -> SELECT select_list FROM table_expr join_expr where_clause group_by_clause','select_statement',7,'p_select_statement','grammar.py',53),
  ('select_statement -> SELECT select_list FROM table_expr join_expr where_clause order_by_clause limit_clause','select_statement',8,'p_select_statement','grammar.py',54),
  ('select_statement -> SELECT select_list FROM table_expr join_expr where_clause','select_statement',6,'p_select_statement','grammar.py',55),
  ('select_statement -> SELECT select_list FROM table_expr join_expr','select_statement',5,'p_select_statement','grammar.py',56),
  ('select_statement -> SELECT select_list FROM table_expr where_clause group_by_clause having_clause order_by_clause limit_clause','select_statement',9,'p_select_statement','grammar.py',57),
  ('select_statement -> SELECT select_list FROM table_expr where_clause order_by_clause','select_statement',6,'p_select_statement','grammar.py',58),
  ('select_statement -> SELECT select_list FROM table_expr where_clause group_by_clause having_clause','select_statement',7,'p_select_statement','grammar.py',59),
  ('select_statement -> SELECT select_list FROM table_expr where_clause group_by_clause order_by_clause limit_clause','select_statement',8,'p_select_statement','grammar.py',60),
  ('select_statement -> SELECT select_list FROM table_expr where_clause group_by_clause','select_statement',6,'p_select_statement','grammar.py',61),
  ('select_statement -> SELECT select_list FROM table_expr where_clause order_by_clause limit_clause','select_statement',7,'p_select_statement','grammar.py',62),
  ('select_statement -> SELECT select_list FROM table_expr where_clause','select_statement',5,'p_select_statement','grammar.py',63),
  ('select_statement -> SELECT select_list FROM table_expr','select_statement',4,'p_select_statement','grammar.py',64),
  ('select_list -> select_list COMMA select_item','select_list',3,'p_select_list','grammar.py',69),
  ('select_list -> select_item','select_list',1,'p_select_list','grammar.py',70),
  ('select_list -> TIMES','select_list',1,'p_select_list','grammar.py',71),
  ('select_list -> conditional_expr','select_list',1,'p_select_list','grammar.py',72),
  ('dist_list -> DISTINCT','dist_list',1,'p_dist_list','grammar.py',77),
  ('select_item -> expression AS ID','select_item',3,'p_select_item','grammar.py',81),
  ('select_item -> expression','select_item',1,'p_select_item','grammar.py',82),
  ('select_item -> COALESCE LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS','select_item',4,'p_select_item','grammar.py',83),
  ('select_item -> conditional_expr AS ID','select_item',3,'p_select_item','grammar.py',84),
  ('table_expr -> ID DOT ID','table_expr',3,'p_table_expr','grammar.py',89),
  ('table_expr -> ID','table_expr',1,'p_table_expr','grammar.py',90),
  ('where_clause -> <empty>','where_clause',0,'p_where_clause','grammar.py',95),
  ('where_clause -> WHERE expression','where_clause',2,'p_where_clause','grammar.py',96),
  ('where_clause -> WHERE ID BETWEEN between_expr AND between_expr','where_clause',6,'p_where_clause','grammar.py',97),
  ('where_clause -> WHERE ID NOT BETWEEN between_expr AND between_expr','where_clause',7,'p_where_clause','grammar.py',98),
  ('where_clause -> WHERE ID IN LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS','where_clause',6,'p_where_clause','grammar.py',99),
  ('where_clause -> WHERE ID NOT IN LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS','where_clause',7,'p_where_clause','grammar.py',100),
  ('where_clause -> WHERE ID IN LEFT_PARENTHESIS select_statement RIGHT_PARENTHESIS','where_clause',6,'p_where_clause','grammar.py',101),
  ('where_clause -> WHERE ID NOT IN LEFT_PARENTHESIS select_statement RIGHT_PARENTHESIS','where_clause',7,'p_where_clause','grammar.py',102),
  ('where_clause -> WHERE ID LIKE STRING','where_clause',4,'p_where_clause','grammar.py',103),
  ('between_expr -> ID','between_expr',1,'p_between_expr','grammar.py',108),
  ('between_expr -> ID DOT ID','between_expr',3,'p_between_expr','grammar.py',109),
  ('between_expr -> NUMBER','between_expr',1,'p_between_expr','grammar.py',110),
  ('between_expr -> ABS LEFT_PARENTHESIS ID RIGHT_PARENTHESIS','between_expr',4,'p_between_expr','grammar.py',111),
  ('between_expr -> ABS LEFT_PARENTHESIS NUMBER RIGHT_PARENTHESIS','between_expr',4,'p_between_expr','grammar.py',112),
  ('between_expr -> STRING','between_expr',1,'p_between_expr','grammar.py',113),
  ('group_by_clause -> GROUP BY expression_list','group_by_clause',3,'p_group_by_clause','grammar.py',121),
  ('having_clause -> HAVING expression','having_clause',2,'p_having_clause','grammar.py',125),
  ('order_by_clause -> ORDER BY order_list','order_by_clause',3,'p_order_by_clause','grammar.py',129),
  ('order_item -> expression ASC','order_item',2,'p_order_item','grammar.py',133),
  ('order_item -> expression DESC','order_item',2,'p_order_item','grammar.py',134),
  ('order_item -> expression','order_item',1,'p_order_item','grammar.py',135),
  ('order_list -> order_list COMMA order_item','order_list',3,'p_order_list','grammar.py',139),
  ('order_list -> order_item','order_list',1,'p_order_list','grammar.py',140),
  ('limit_clause -> LIMIT NUMBER','limit_clause',2,'p_limit_clause','grammar.py',145),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','grammar.py',149),
  ('expression_list -> expression','expression_list',1,'p_expression_list','grammar.py',150),
  ('expression -> ID','expression',1,'p_expression','grammar.py',154),
  ('expression -> ID DOT ID','expression',3,'p_expression','grammar.py',155),
  ('expression -> NUMBER','expression',1,'p_expression','grammar.py',156),
  ('expression -> ABS LEFT_PARENTHESIS ID RIGHT_PARENTHESIS','expression',4,'p_expression','grammar.py',157),
  ('expression -> ABS LEFT_PARENTHESIS NUMBER RIGHT_PARENTHESIS','expression',4,'p_expression','grammar.py',158),
  ('expression -> STRING','expression',1,'p_expression','grammar.py',159),
  ('expression -> NULL','expression',1,'p_expression','grammar.py',160),
  ('expression -> expression PLUS expression','expression',3,'p_expression','grammar.py',161),
  ('expression -> expression MINUS expression','expression',3,'p_expression','grammar.py',162),
  ('expression -> expression TIMES expression','expression',3,'p_expression','grammar.py',163),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','grammar.py',164),
  ('expression -> expression EQUALS expression','expression',3,'p_expression','grammar.py',165),
  ('expression -> expression LESS_OR_EQUAL expression','expression',3,'p_expression','grammar.py',166),
  ('expression -> expression LESS_THAN expression','expression',3,'p_expression','grammar.py',167),
  ('expression -> expression GREATER_THAN expression','expression',3,'p_expression','grammar.py',168),
  ('expression -> expression GREATER_OR_EQUAL expression','expression',3,'p_expression','grammar.py',169),
  ('expression -> expression AND expression','expression',3,'p_expression','grammar.py',170),
  ('expression -> expression OR expression','expression',3,'p_expression','grammar.py',171),
  ('expression -> NOT expression','expression',2,'p_expression','grammar.py',172),
  ('expression -> DATEPART LEFT_PARENTHESIS ID COMMA STRING RIGHT_PARENTHESIS','expression',6,'p_expression','grammar.py',173),
  ('expression -> LEFT_PARENTHESIS expression RIGHT_PARENTHESIS','expression',3,'p_expression','grammar.py',174),
  ('expression -> COUNT LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS','expression',4,'p_expression','grammar.py',175),
  ('expression -> AVG LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS','expression',4,'p_expression','grammar.py',176),
  ('expression -> MIN LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS','expression',4,'p_expression','grammar.py',177),
  ('expression -> MAX LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS','expression',4,'p_expression','grammar.py',178),
  ('expression -> SUM LEFT_PARENTHESIS expression_list RIGHT_PARENTHESIS','expression',4,'p_expression','grammar.py',179),
  ('expression -> conditional_expr','expression',1,'p_expression','grammar.py',180),
  ('insert_statement -> INSERT INTO ID LEFT_PARENTHESIS column_list RIGHT_PARENTHESIS VALUES LEFT_PARENTHESIS value_list RIGHT_PARENTHESIS SEMICOLON','insert_statement',11,'p_insert_statement','grammar.py',186),
  ('column_list -> column_list COMMA ID','column_list',3,'p_column_list','grammar.py',190),
  ('column_list -> ID','column_list',1,'p_column_list','grammar.py',191),
  ('value_list -> value_list COMMA value','value_list',3,'p_value_list','grammar.py',195),
  ('value_list -> value','value_list',1,'p_value_list','grammar.py',196),
  ('value -> NUMBER','value',1,'p_value','grammar.py',200),
  ('value -> STRING','value',1,'p_value','grammar.py',201),
  ('value -> ID','value',1,'p_value','grammar.py',202),
  ('value -> NULL','value',1,'p_value','grammar.py',203),
  ('update_statement -> UPDATE ID SET set_list where_clause SEMICOLON','update_statement',6,'p_update_statement','grammar.py',207),
  ('conditional_expr -> IF expression THEN expression END','conditional_expr',5,'p_conditional_expr','grammar.py',211),
  ('conditional_expr -> IF expression THEN expression ELSE expression','conditional_expr',6,'p_conditional_expr','grammar.py',212),
  ('conditional_expr -> IF expression THEN expression elsif_list ELSE expression END','conditional_expr',8,'p_conditional_expr','grammar.py',213),
  ('conditional_expr -> CASE case_expr END','conditional_expr',3,'p_conditional_expr','grammar.py',214),
  ('elsif_list -> ELSIF LEFT_PARENTHESIS expression THEN expression','elsif_list',5,'p_elsif_list','grammar.py',219),
  ('elsif_list -> elsif_list ELSIF LEFT_PARENTHESIS expression THEN expression','elsif_list',6,'p_elsif_list','grammar.py',220),
  ('case_expr -> WHEN expression THEN expression','case_expr',4,'p_case_expr','grammar.py',225),
  ('case_expr -> WHEN expression THEN expression case_expr','case_expr',5,'p_case_expr','grammar.py',226),
  ('set_list -> set_list COMMA ID EQUALS value','set_list',5,'p_set_list','grammar.py',230),
  ('set_list -> ID EQUALS value','set_list',3,'p_set_list','grammar.py',231),
  ('delete_statement -> DELETE FROM ID where_clause SEMICOLON','delete_statement',5,'p_delete_statement','grammar.py',236),
  ('create_statement -> CREATE TABLE ID LEFT_PARENTHESIS column_def_list RIGHT_PARENTHESIS SEMICOLON','create_statement',7,'p_create_statement','grammar.py',240),
  ('column_def_list -> column_def_list COMMA column_def','column_def_list',3,'p_column_def_list','grammar.py',244),
  ('column_def_list -> column_def','column_def_list',1,'p_column_def_list','grammar.py',245),
  ('column_def -> ID data_type','column_def',2,'p_column_def','grammar.py',249),
  ('column_def -> ID data_type column_constraints','column_def',3,'p_column_def','grammar.py',250),
  ('parameter_list -> parameter_list COMMA parameter','parameter_list',3,'p_parameter_list','grammar.py',254),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','grammar.py',255),
  ('parameter -> ID data_type','parameter',2,'p_parameter','grammar.py',259),
  ('function_body -> DOLARS DECLARE parameter_list SEMICOLON BEGIN STRING END SEMICOLON DOLARS SEMICOLON','function_body',10,'p_function_body','grammar.py',263),
  ('data_type -> INT','data_type',1,'p_data_type','grammar.py',268),
  ('data_type -> VARCHAR LEFT_PARENTHESIS NUMBER RIGHT_PARENTHESIS','data_type',4,'p_data_type','grammar.py',269),
  ('data_type -> FLOAT LEFT_PARENTHESIS NUMBER RIGHT_PARENTHESIS','data_type',4,'p_data_type','grammar.py',270),
  ('column_constraints -> column_constraints column_constraint','column_constraints',2,'p_column_constraints','grammar.py',275),
  ('column_constraints -> column_constraint','column_constraints',1,'p_column_constraints','grammar.py',276),
  ('column_constraint -> NOT NULL','column_constraint',2,'p_column_constraint','grammar.py',280),
  ('column_constraint -> UNIQUE','column_constraint',1,'p_column_constraint','grammar.py',281),
  ('column_constraint -> PRIMARY_KEY','column_constraint',1,'p_column_constraint','grammar.py',282),
  ('column_constraint -> FOREIGN_KEY LEFT_PARENTHESIS ID RIGHT_PARENTHESIS REFERENCES ID LEFT_PARENTHESIS ID RIGHT_PARENTHESIS','column_constraint',9,'p_column_constraint','grammar.py',283),
  ('column_constraint -> CHECK LEFT_PARENTHESIS expression RIGHT_PARENTHESIS','column_constraint',4,'p_column_constraint','grammar.py',284),
  ('column_constraint -> DEFAULT value','column_constraint',2,'p_column_constraint','grammar.py',285),
  ('join_expr -> join_type table_expr ON expression','join_expr',4,'p_join_expr','grammar.py',290),
  ('join_expr -> join_expr join_type table_expr ON expression','join_expr',5,'p_join_expr','grammar.py',291),
  ('join_type -> INNER JOIN','join_type',2,'p_join_type','grammar.py',296),
  ('join_type -> LEFT JOIN','join_type',2,'p_join_type','grammar.py',297),
  ('join_type -> RIGHT JOIN','join_type',2,'p_join_type','grammar.py',298),
  ('join_type -> FULL JOIN','join_type',2,'p_join_type','grammar.py',299),
  ('join_type -> OUTER JOIN','join_type',2,'p_join_type','grammar.py',300),
  ('join_type -> JOIN','join_type',1,'p_join_type','grammar.py',301),
  ('alter_statement -> ALTER TABLE ID alter_actions SEMICOLON','alter_statement',5,'p_alter_statement','grammar.py',305),
  ('alter_actions -> alter_actions alter_action','alter_actions',2,'p_alter_actions','grammar.py',309),
  ('alter_actions -> alter_action','alter_actions',1,'p_alter_actions','grammar.py',310),
  ('alter_action -> ADD COLUMN column_def','alter_action',3,'p_alter_action','grammar.py',314),
  ('alter_action -> ADD CONSTRAINT ID constraint_def','alter_action',4,'p_alter_action','grammar.py',315),
  ('alter_action -> DROP COLUMN ID','alter_action',3,'p_alter_action','grammar.py',316),
  ('alter_action -> DROP CONSTRAINT ID','alter_action',3,'p_alter_action','grammar.py',317),
  ('constraint_def -> UNIQUE LEFT_PARENTHESIS ID RIGHT_PARENTHESIS','constraint_def',4,'p_constraint_def','grammar.py',322),
  ('constraint_def -> PRIMARY_KEY LEFT_PARENTHESIS ID RIGHT_PARENTHESIS','constraint_def',4,'p_constraint_def','grammar.py',323),
  ('constraint_def -> FOREIGN_KEY LEFT_PARENTHESIS ID RIGHT_PARENTHESIS REFERENCES ID LEFT_PARENTHESIS ID RIGHT_PARENTHESIS','constraint_def',9,'p_constraint_def','grammar.py',324),
  ('constraint_def -> CHECK LEFT_PARENTHESIS expression RIGHT_PARENTHESIS','constraint_def',4,'p_constraint_def','grammar.py',325),
  ('constraint_def -> DEFAULT value','constraint_def',2,'p_constraint_def','grammar.py',326),
  ('drop_statement -> DROP TABLE ID SEMICOLON','drop_statement',4,'p_drop_statement','grammar.py',330),
  ('drop_statement -> DROP COLUMN ID DOT ID SEMICOLON','drop_statement',6,'p_drop_statement','grammar.py',331),
]
